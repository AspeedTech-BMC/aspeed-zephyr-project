/ {
#if 0
	/* For v01.00.06 */
	resources {
		compatible = "demo,gpio_basic_api";
		bmc-srst-ctrl-out-gpios = <&gpio0_m_p 5 0>; /* GPIO_M5 */
		bmc-extrst-ctrl-out-gpios = <&gpio0_e_h 26 0>; /* GPIO_H2 */
		bmc-rst-ind-in-gpios = <&gpio0_m_p 19 0>; /* GPIO_O3 */
		bmc-cpu1-mux-sel-out-gpios = <&gpio0_a_d 26 0>; /* GPIO_D2 */
		bic-rst-ind-in-gpios = <&gpio0_a_d 16 0>; /* GPIO_C0 */
		pch-rst-ctrl-out-gpios = <&gpio0_m_p 2 0>; /* GPIO_M2 */
		cpu0-rst-ind-in-gpios = <&gpio0_q_t 26 0>; /* GPIO_T2 */
		cpu1-rst-ind-in-gpios = <&gpio0_q_t 28 0>; /* GPIO_T4 */
		cpu0-flash-pwr-out-gpios = <&gpio0_i_l 26 0>; /* GPIO_L2 */
		cpu1-flash-pwr-out-gpios = <&gpio0_i_l 27 0>; /* GPIO_L3 */
	};
#else
	/* For v01.00.05 */
	resources {
		compatible = "demo,gpio_basic_api";
		out-gpios = <&gpio0_m_p 5 0>;
		in-gpios = <&gpio0_m_p 19 0>;
	};
#endif
};

&i2cfilter {
	pinctrl-0 = <&pinctrl_smbflt_default>;
	status = "okay";
};

&i2c0 {
	status = "okay";
	pinctrl-0 = <&pinctrl_i2c0_default>;
};

&i2c1 {
	pinctrl-0 = <&pinctrl_i2c1_default>;
	status = "okay";

	bmcmbx_0: bmcmbx_0@38 {
		compatible = "bmcmbx";
		reg = <0x38>;
		status = "okay";
		label = "BMCMBX_0";
	};
};

&i2c2 {
	pinctrl-0 = <&pinctrl_i2c2_default>;
	status = "okay";
};

&i2c3 {
	pinctrl-0 = <&pinctrl_i2c3_default>;
	status = "okay";

};

&i2c4 {
	pinctrl-0 = <&pinctrl_i2c4_default>;
	status = "okay";
};

&i2c5 {
	pinctrl-0 = <&pinctrl_i2c5_default>;
	status = "okay";
};

// for i2c filter testing
&i2c8 {
	pinctrl-0 = <&pinctrl_i2c8_default>;
	status = "okay";
 };

&wdt0 {
	status = "okay";
};

&wdt1 {
	status = "okay";
};

&wdt2 {
	status = "okay";
};

&wdt3 {
	status = "okay";
};

&wdt4 {
	status = "okay";
};

&fmc {
	status = "okay";
};

&fmc_cs0 {
	status = "okay";
	spi-max-buswidth = <4>;
	spi-max-frequency = <50000000>;
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;
		active_partition: partition@0 {
			label = "active";
			reg = <0x0 0x60000>;
		};

		recovery_partition: partition@1 {
			label = "recovery";
			reg = <0x60000 0x60000>;
		};

		state_partition: partition@2 {
			label = "state";
			reg = <0xC0000 0x10000>;
		};

		intel_state_partition: partition@3 {
			label = "intel_state";
			reg = <0xD0000 0x10000>;
		};

		key_partition: partition@4 {
			label = "key";
			reg = <0xE0000 0x10000>;
		};

		log_partition: partition@5 {
			label = "log";
			reg = <0xF0000 0x20000>;
		};
	};
};

&fmc_cs1 {
	status = "okay";
	spi-max-buswidth = <4>;
	spi-max-frequency = <50000000>;
};

&spi1 {
	num-cs = <1>;
	status = "okay";
};

&spi1_cs0 {
	spi-max-buswidth = <4>;
	spi-max-frequency = <50000000>;
	status = "okay";
};

/* Use AST1060 SPI2 as the internal SPI master to
 * to access the SPI flashes connected to SPI monitors
 * Here,
 * "SPI2_CS0" used to access flash connected to SPI_Monitor_2,
 * "SPI2_CS1" is used to access flash connected to SPI_Monitor_3,
 * "SPI2_CS2" is used to access flash connected to SPI_Monitor_4,
 */

&spi2_cs0 {
	spi-max-buswidth = <4>;
	spi-max-frequency = <50000000>;
	reg = <0>;
	status = "okay";
};

&spi2_cs1 {
	spi-max-buswidth = <4>;
	spi-max-frequency = <50000000>;
	reg = <1>;
	status = "okay";
};

&spi2 {
	internal-mux-master = <2>;
	spi-monitor-output-base = <2>;
	spi-monitor-common-ctrl = <&spim0>;
	pinctrl-0 = <>;

	num-cs = <3>;
	status = "okay";

	spi2_cs2: flash@2 {
		compatible = "jedec,spi-nor";
		reg = <2>;
		spi-max-buswidth = <4>;
		spi-max-frequency = <50000000>;
		label = "spi2_cs2";
		status = "okay";
	};
};

&spim0 {
	status = "okay";
};

&spim1 {
	allow-cmds = [03 13 0b 0c 6b 6c 01 05 35 06 04 20 21 9f 5a b7 e9 32 34 d8 dc 02 12 15 31 3b 3c];
	log-ram-size = <0x200>;
	pinctrl-0 = <&pinctrl_spim1_cs &pinctrl_spim1_in_default &pinctrl_spim1_qspi_in_default
				&pinctrl_spim1_rst_out &pinctrl_spim1_muxsel>;

	flash-device = <&spi1_cs0>;
	status = "okay";
	write-forbidden-regions = <
		0x00000000 0x08000000		
	>;
};

&spim2 {
	allow-cmds = [03 13 0b 0c 6b 6c 01 05 35 06 04 20 21 9f 5a b7 e9 32 34 d8 dc 02 12 15 31 3b 3c];
	log-ram-size = <0x200>;
	pinctrl-0 = <&pinctrl_spim2_cs &pinctrl_spim2_in_default &pinctrl_spim2_out_default
				&pinctrl_spim2_qspi_in_default &pinctrl_spim2_qspi_out_default
				&pinctrl_spim2_rst_out>;

	flash-device = <&spi2_cs0>;
	status = "okay";
	write-forbidden-regions = <
		0x00000000 0x08000000		
	>;
};

&spim3 {
	allow-cmds = [03 13 0b 0c 6b 6c 01 05 35 06 04 20 21 9f 5a b7 e9 32 34 d8 dc 02 12 15 31 3b 3c];
	log-ram-size = <0x200>;
	pinctrl-0 = <&pinctrl_spim3_cs &pinctrl_spim3_in_default &pinctrl_spim3_out_default
				&pinctrl_spim3_qspi_in_default &pinctrl_spim3_qspi_out_default
				&pinctrl_spim3_rst_out>;

	flash-device = <&spi2_cs1>;
	status = "okay";
};

&spim4 {
	allow-cmds = [03 13 0b 0c 6b 6c 01 05 35 06 04 20 21 9f 5a b7 e9 32 34 d8 dc 02 12 15 31 3b 3c];
	log-ram-size = <0x200>;
	/* for demo purpose */
	/*
	read-forbidden-regions = <
		0x00000000 0x10000
		0x00274000 0x4000
		0x01E00000 0x80000
	>;

	write-forbidden-regions = <
		0x00000000 0x10000
		0x013FC000 0x28000
		0x0FFF8000 0x8000
	>;
	*/

	pinctrl-0 = <&pinctrl_spim4_cs &pinctrl_spim4_in_default &pinctrl_spim4_out_default
				&pinctrl_spim4_qspi_in_default &pinctrl_spim4_qspi_out_default
				&pinctrl_spim4_rst_out>;

	flash-device = <&spi2_cs2>;
	status = "okay";
};
